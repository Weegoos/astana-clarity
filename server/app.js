import dotenv from "dotenv";
import express from "express";
import cors from "cors";
import { createServer } from "http";
import { WebSocketServer } from "ws";
import { connectDB } from "./database/db.js";
import setupSwagger from "./swagger.js";

import userRouters from './routers/userRouters.js';

dotenv.config();

const app = express();
const server = createServer(app); // –°–æ–∑–¥–∞–µ–º HTTP-—Å–µ—Ä–≤–µ—Ä
const wss = new WebSocketServer({ server }); // –°–æ–∑–¥–∞–µ–º WebSocket-—Å–µ—Ä–≤–µ—Ä

const PORT = process.env.PORT || 8001;

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
(async () => {
    const db = await connectDB();
    if (!db) {
        console.error("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞");
        process.exit(1);
    }

    app.use(cors({
        credentials: true,
        origin: "*"
    }));

    app.use(express.json());


    app.get("/", (req, res) => {
        res.send("–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!");
    });

    app.use("/user", userRouters);

    setupSwagger(app);

    // WebSocket –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
    wss.on("connection", (ws) => {
        console.log("üîå –ö–ª–∏–µ–Ω—Ç –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ WebSocket");

        ws.on("message", (message) => {
            console.log("üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:", message.toString());
        });

        ws.on("close", () => {
            console.log("‚ùå –ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è");
        });
    });

    server.listen(PORT, () => {
        console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
    });
})();

export { wss }; // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º WebSocket —Å–µ—Ä–≤–µ—Ä